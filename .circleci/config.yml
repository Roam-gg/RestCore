version: 2.1
executors:
  docker-publisher:
    docker:
      - image: circleci/python:3.7.0
  tester:
    docker:
      - image: circleci/python:3.7.0
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - image.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i image.tar | true
      - run:
          name: Build Docker image
          command: |
            docker build --cache-from=$IMAGE_NAME:latest -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: |
            docker save -o image.tar $IMAGE_NAME
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - image.tar
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            docker push $IMAGE_NAME:latest
  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_TAG
            docker push $IMAGE_NAME:$CIRCLE_TAG
            docker push $IMAGE_NAME:latest
  test:
    executor: tester
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: create test container
          command: |
            docker create -v "/vol" -w "/vol" --name tester python:3.7-alpine pip install pytest && pytest
            docker cp $PWD tester:/vol
      - run:
          name: Start containers
          command: docker-compose -f tests/docker-compose.yaml up
      - run:
          name: Test
          command: |
            docker start tester
workflows:
  version: 2
  build-nightly:
    jobs:
      - build:
          filters:
             branches:
               only: develop
      - publish-latest:
          context: DockerHub
          requires:
            - build
          filters:
            branches:
              only: develop
  build-tags:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-tag:
          context: DockerHub
          requires:
            - build
          filters:
             tags:
              only: /^v.*/
             branches:
              ignore: /.*/
  build-pulls:
    jobs:
      - build:
           filters:
             branches:
               only: /^pull.+/
